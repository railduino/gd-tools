services:
  traefik:
    image: traefik:{{ .TraefikVersion }}
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email={{ .EmailUser }}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--ping=true"
      - "--log.level={{ .LogLevel }}"
      - "--accesslog.filepath=/logs/access.log"
      - "--accesslog.bufferingsize=100"
      - "--log.filepath=/logs/traefik.log"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ .DataDir }}/letsencrypt:/letsencrypt"
      - "{{ .LogsDir }}:/logs"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`{{ .StatusHost }}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users={{ .StatusUser }}:{{ .StatusPswd }}"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
    networks:
      - web

networks:
  web:
    external: true

